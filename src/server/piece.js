class Piece {
  constructor() {
    this.shape = this.getShape();
    this.x = 0;
    this.y = 0;
  }

  getShape() {
    const shapeGenerators = {
      0: generatePlank,
      1: generateHook,
      2: generateReversedHook,
      3: generateSquare,
      4: generateStep,
      5: generateReversedStep,
      6: generateTable,
    }

    return shapeGenerators[Math.floor(Math.random() * shapeIterators.length)]();
  }

  rotate() {
    
  }

  // generateShape() {
  //   const shapesObj = {
  //     0: [
  //       [
  //         [1, 1, 1, 1], // XXXX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 0, 0, 0], // X
  //         [1, 0, 0, 0], // X
  //         [1, 0, 0, 0], // X
  //         [1, 0, 0, 0], // X
  //       ],
  //     ],
  //     1: [
  //       [
  //         [1, 1, 0, 0], // XX
  //         [1, 0, 0, 0], // X
  //         [1, 0, 0, 0], // X
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 1, 1, 0], // XXX
  //         [0, 0, 1, 0], //   X
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [0, 1, 0, 0], //  X
  //         [0, 1, 0, 0], //  X
  //         [1, 1, 0, 0], // XX
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 0, 0, 0], // X
  //         [1, 1, 1, 0], // XXX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 1, 0, 0], // XX
  //         [0, 1, 0, 0], //  X
  //         [0, 1, 0, 0], //  X
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [0, 0, 1, 0], //   X
  //         [1, 1, 1, 0], // XXX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 0, 0, 0], // X
  //         [1, 0, 0, 0], // X
  //         [1, 1, 0, 0], // XX
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 1, 1, 0], // XXX
  //         [1, 0, 0, 0], // X
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //     ],
  //     2: [
  //       [
  //         [1, 1, 0, 0], // XX
  //         [1, 1, 0, 0], // XX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //     ],
  //     3: [
  //       [
  //         [0, 1, 1, 0], //  XX
  //         [1, 1, 0, 0], // XX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 0, 0, 0], // X
  //         [1, 1, 0, 0], // XX
  //         [0, 1, 0, 0], //  X
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 1, 0, 0], // XX
  //         [0, 1, 1, 0], //  XX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [0, 1, 0, 0], //  X
  //         [1, 1, 0, 0], // XX
  //         [1, 0, 0, 0], // X
  //         [0, 0, 0, 0],
  //       ],
  //     ],
  //     4: [
  //       [
  //         [0, 1, 0, 0], //  X
  //         [1, 1, 1, 0], // XXX
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 0, 0, 0], // X
  //         [1, 1, 0, 0], // XX
  //         [1, 0, 0, 0], // X
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [1, 1, 1, 0], // XXX
  //         [0, 1, 0, 0], //  X
  //         [0, 0, 0, 0],
  //         [0, 0, 0, 0],
  //       ],
  //       [
  //         [0, 1, 0, 0], //  X
  //         [1, 1, 0, 0], // XX
  //         [0, 1, 0, 0], //  X
  //         [0, 0, 0, 0],
  //       ],
  //     ],
  //   };

  //   const shapes = [
  //     [
  //       [1, 1, 1, 1], // XXXX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 0, 0, 0], // X
  //       [1, 0, 0, 0], // X
  //       [1, 0, 0, 0], // X
  //       [1, 0, 0, 0], // X
  //     ],
  //     [
  //       [1, 1, 0, 0], // XX
  //       [1, 0, 0, 0], // X
  //       [1, 0, 0, 0], // X
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 1, 1, 0], // XXX
  //       [0, 0, 1, 0], //   X
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [0, 1, 0, 0], //  X
  //       [0, 1, 0, 0], //  X
  //       [1, 1, 0, 0], // XX
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 0, 0, 0], // X
  //       [1, 1, 1, 0], // XXX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 1, 0, 0], // XX
  //       [0, 1, 0, 0], //  X
  //       [0, 1, 0, 0], //  X
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [0, 0, 1, 0], //   X
  //       [1, 1, 1, 0], // XXX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 0, 0, 0], // X
  //       [1, 0, 0, 0], // X
  //       [1, 1, 0, 0], // XX
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 1, 1, 0], // XXX
  //       [1, 0, 0, 0], // X
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 1, 0, 0], // XX
  //       [1, 1, 0, 0], // XX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [0, 1, 1, 0], //  XX
  //       [1, 1, 0, 0], // XX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 0, 0, 0], // X
  //       [1, 1, 0, 0], // XX
  //       [0, 1, 0, 0], //  X
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 1, 0, 0], // XX
  //       [0, 1, 1, 0], //  XX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [0, 1, 0, 0], //  X
  //       [1, 1, 0, 0], // XX
  //       [1, 0, 0, 0], // X
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [0, 1, 0, 0], //  X
  //       [1, 1, 1, 0], // XXX
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 0, 0, 0], // X
  //       [1, 1, 0, 0], // XX
  //       [1, 0, 0, 0], // X
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [1, 1, 1, 0], // XXX
  //       [0, 1, 0, 0], //  X
  //       [0, 0, 0, 0],
  //       [0, 0, 0, 0],
  //     ],
  //     [
  //       [0, 1, 0, 0], //  X
  //       [1, 1, 0, 0], // XX
  //       [0, 1, 0, 0], //  X
  //       [0, 0, 0, 0],
  //     ],
  //   ];

  //   return shapes[Math.floor(Math.random() * shapes.length)];
  // }
}

module.exports = Piece;
